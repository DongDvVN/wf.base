<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8AY6H/AGOh/wBjof8AY6H/AGOh/wBjof8AY6H/AGOh/wBjof8AY6H/AGOh
        /wBjof8AY6H/BmOh/wVjof8AY6H/AGOh/wBjof8AY6H/AGOh/wBjof8AY6H/AGOh/wBjof8AY6H/AGOh
        /wBjof8AY6H/AGOh/wBjof8AY6H/AGOh/wBjof8AY6H/AGOh/wBjof8AY6H/AGOh/wBjof8AY6H/AGOh
        /wBjof8AY6H/AGOh/wBjof9GY6H/RWOh/wBjof8AY6H/AGOh/wBjof8AY6H/AGOh/wBjof8AY6H/AGOh
        /wBjof8AY6H/AGOh/wBjof8AY6H/AGOh/wBjof8AY6H/AGGg/wBhoP8AYaD/AGGg/wBhoP8AYaD/AGGg
        /wBhoP8AYaD/AGGg/wBhoP8AYaD/AGGg/9VhoP/mYaD/CGGg/wBhoP8AYaD/AGGg/wBhoP8AYaD/AGGg
        /wBhoP8AYaD/AGGg/wBhoP8AYaD/AGGg/wBhoP8AYaD/AGGg/wBhoP8AYJ7/AGCe/wBgnv8AYJ7/AGCe
        /wBgnv8AYJ7/AGCe/wBgnv8AYJ7/AGCe/wBgnv8+YJ7//2Ce//9gnv+rYJ7/AGCe/wBgnv8AYJ7/AGCe
        /wBgnv8AYJ7/AGCe/wBgnv8AYJ7/AGCe/wBgnv8AYJ7/AGCe/wBgnv8AYJ7/AGCe/wBem/8AXpv/AF6b
        /wBem/8AXpv/AF6b/wBem/8AXpv/AF6b/wBem/8AXpv/AF6b/7dem///Xpv//16b//9em/+LXpv/AF6b
        /wBem/8AXpv/AF6b/wBem/8AXpv/AF6b/wBem/8AXpv/AF6b/wBem/8AXpv/AF6b/wBem/8AXpv/AFuZ
        /wBbmf8AW5n/AFuZ/wBbmf8AW5n/AFuZ/wBbmf8AW5n/AFuZ/wBbmf8/W5n//1uZ//9bmf//W5n//1uZ
        //9bmf9bW5n/AFuZ/wBbmf8AW5n/AFuZ/wBbmf8AW5n/AFuZ/wBbmf8AW5n/AFuZ/wBbmf8AW5n/AFuZ
        /wBbmf8AWJb/AFiW/wBYlv8AWJb/AFiW/wBYlv8AWJb/AFiW/wBYlv8AWJb/AFiW/7xYlv//WJb//1iW
        //9Ylv//WJb//1iW//ZYlv84WJb/AFiW/wBYlv8AWJb/AFiW/wBYlv8AWJb/AFiW/wBYlv8AWJb/AFiW
        /wBYlv8AWJb/AFiW/wBVk/4AVZP+AFWT/gBVk/4AVZP+AFWT/gBVk/4AVZP+AFWT/gBVk/4/VZP+/1WT
        /v9Vk/7/VZP+/1WT/v9Vk/7/VZP+/1WT/uRVk/4ZVZP+AFWT/gBVk/4AVZP+AFWT/gBVk/4AVZP+AFWT
        /gBVk/4AVZP+AFWT/gBVk/4AVZP+AFKP/QBSj/0AUo/9AFKP/QBSj/0AUo/9AFKP/QBSj/0AUo/9AFKP
        /cZSj/3/Uo/9/1KP/f9Sj/3/Uo/9/1KP/f9Sj/3/Uo/9/1KP/c5Sj/0KUo/9AFKP/QBSj/0AUo/9AFKP
        /QBSj/0AUo/9AFKP/QBSj/0AUo/9AFKP/QBSj/0AT4z9AE+M/QBPjP0AT4z9AE+M/QBPjP0AT4z9AE+M
        /QBPjP1WT4z9/0+M/f9PjP3/T4z9/0+M/f9PjP3/T4z9/0+M/f9PjP3/T4z9/0+M/alPjP0AT4z9AE+M
        /QBPjP0AT4z9AE+M/QBPjP0AT4z9AE+M/QBPjP0AT4z9AE+M/QBMiPwATIj8AEyI/ABMiPwATIj8AEyI
        /ABMiPwATIj8AUyI/MJMiPz/TIj8/0yI/P9MiPz/TIj8/0yI/P9MiPz/TIj8/0yI/P9MiPz/TIj8/0yI
        /HpMiPwATIj8AEyI/ABMiPwATIj8AEyI/ABMiPwATIj8AEyI/ABMiPwATIj8AEiF+wBIhfsASIX7AEiF
        +wBIhfsASIX7AEiF+wBIhfsBSIX7x0iF+/9Ihfv/SIX7/0iF+/9Ihfv/SIX7/0iF+/9Ihfv/SIX7/0iF
        +/9Ihfv/SIX7/0iF+1dIhfsASIX7AEiF+wBIhfsASIX7AEiF+wBIhfsASIX7AEiF+wBIhfsARIH7AESB
        +wBEgfsARIH7AESB+wBEgfsARIH7AESB+wBEgftTRIH7/0SB+/9Egfv/RIH7/0SB+/9Egfv/RIH7/0SB
        +/9Egfv/RIH7/0SB+/9Egfv/RIH7+0SB+0NEgfsARIH7AESB+wBEgfsARIH7AESB+wBEgfsARIH7AESB
        +wBBffoAQX36AEF9+gBBffoAQX36AEF9+gBBffoAQX36AEF9+gBBffqXQX36/0F9+v9Bffr/QX36/0F9
        +v9Bffr/QX36/0F9+v9Bffr/QX36/0F9+v9Bffr/QX3690F9+mRBffoaQX36FEF9+hdBffoXQX36F0F9
        +hdBffoeQX36Iz15+QA9efkAPXn5AD15+QA9efkAPXn5AD15+QA9efkAPXn5AD15+QA9efmoPXn5/z15
        +f89efn/PXn5/z15+f89efn/PXn5/z15+f89efn/PXn5/z15+f89efn/PXn5/z15+ek9efnkPXn55z15
        +ec9efnnPXn55z15+fU9efmaOXX4ADl1+AA5dfgAOXX4ADl1+AA5dfgAOXX4ADl1+AA5dfgAOXX4ADl1
        +AM5dfi8OXX4/zl1+P85dfj/OXX4/zl1+P85dfj/OXX4/zl1+P85dfj/OXX4/zl1+P85dfj/OXX4/zl1
        +P85dfj/OXX4/zl1+P85dfj/OXX4/zl1+CY1cvcANXL3ADVy9wA1cvcANXL3ADVy9wA1cvcANXL3ADVy
        9wA1cvcANXL3ADVy9wY1cvfGNXL3/zVy9/81cvf/NXL3/zVy9/81cvf/NXL3/zVy9/81cvf/NXL3/zVy
        9/81cvf/NXL3/zVy9/81cvf/NXL3/zVy9/81cvd8NXL3ADFu9wAxbvcAMW73ADFu9wAxbvcAMW73ADFu
        9wAxbvcAMW73ADFu9wAxbvcAMW73ADFu9zcxbvf/MW73/zFu9/8xbvf/MW73/zFu9/8xbvf/MW73/zFu
        9/8xbvf/MW73/zFu9/8xbvf/MW73/zFu9/8xbvf/MW734DFu9w4xbvcALWr2AC1q9gAtavYALWr2AC1q
        9kAtavZRLWr2TS1q9lEtavZRLWr2US1q9kstavZRLWr2ti1q9v8tavb/LWr2/y1q9v8tavb/LWr2/y1q
        9v8tavb/LWr2/y1q9v8tavb/LWr2/y1q9v8tavb/LWr2/y1q9v8tavZdLWr2AC1q9gApZvUAKWb1AClm
        9QApZvU6KWb1/Clm9f8pZvX/KWb1/ylm9f8pZvX/KWb1/ylm9f8pZvX/KWb1/ylm9f8pZvX/KWb1/ylm
        9f8pZvX/KWb1/ylm9f8pZvX/KWb1/ylm9f8pZvX/KWb1/ylm9f8pZvX/KWb10ylm9QQpZvUAKWb1ACZi
        9QAmYvUAJmL1ACZi9bomYvX/JmL1/yZi9f8mYvX/JmL1/yZi9f8mYvX/JmL1/yZi9f8mYvX/JmL1/yZi
        9f8mYvX/JmL1/yZi9f8mYvX/JmL1/yZi9f8mYvX/JmL1/yZi9f8mYvX/JmL1/yZi9f8mYvU/JmL1ACZi
        9QAmYvUAIl/0ACJf9AAiX/QyIl/0/yJf9P8iX/T/Il/0/yJf9P8iX/T/Il/0/yJf9P8iX/T/Il/0/yJf
        9P8iX/T/Il/0/yJf9P8iX/T/Il/0/yJf9P8iX/T/Il/08iJf9OQiX/ToIl/06SJf9O4iX/TBIl/0RCJf
        9AAiX/QAIl/0ACJf9AAeXPMAHlzzAB5c86keXPP/Hlzz/x5c8/8eXPP/Hlzz/x5c8/8eXPP/Hlzz/x5c
        8/8eXPP/Hlzz/x5c8/8eXPP/Hlzz/x5c8/8eXPP/Hlzz/x5c87MeXPMfHlzzFh5c8xkeXPMaHlzzHR5c
        8wAeXPMAHlzzAB5c8wAeXPMAHlzzABtZ9AAbWfQ1G1n0/xtZ9P8bWfT/G1n0/xtZ9P8bWfT/G1n0/xtZ
        9P8bWfT/G1n0/xtZ9P8bWfT/G1n0/xtZ9P8bWfT/G1n0/xtZ9P8bWfTOG1n0CxtZ9AAbWfQAG1n0ABtZ
        9AAbWfQAG1n0ABtZ9AAbWfQAG1n0ABtZ9AAbWfQAFlbzABZW87EWVvP/Flbz/xZW8/8WVvP/Flbz/xZW
        8/8WVvP/Flbz/xZW8/8WVvP/Flbz/xZW8/8WVvP/Flbz/xZW8/8WVvP/Flbz6BZW8x4WVvMAFlbzABZW
        8wAWVvMAFlbzABZW8wAWVvMAFlbzABZW8wAWVvMAFlbzABZW8wATVPNDE1Tz/xNU8/8TVPP/E1Tz/xNU
        8/8TVPP/E1Tz/xNU8/8TVPP/E1Tz/xNU8/8TVPP/E1Tz/xNU8/8TVPP/E1Tz/xNU8+kTVPMuE1TzABNU
        8wATVPMAE1TzABNU8wATVPMAE1TzABNU8wATVPMAE1TzABNU8wATVPMAE1TzABFS8rQRUvL/EVLy/xFS
        8v8RUvL/EVLy/xFS8v8RUvL/EVLy/xFS8v8RUvL/EVLy/xFS8v8RUvL/EVLy/xFS8v8RUvL4EVLyShFS
        8gARUvIAEVLyABFS8gARUvIAEVLyABFS8gARUvIAEVLyABFS8gARUvIAEVLyABFS8gARUvIADVDyhA1Q
        8r8NUPKsDVDyrQ1Q8q0NUPKtDVDyrQ1Q8q0NUPKtDVDyrQ1Q8q0NUPKtDVDyrQ1Q8q0NUPKtDVDytw1Q
        8pwNUPINDVDyAA1Q8gANUPIADVDyAA1Q8gANUPIADVDyAA1Q8gANUPIADVDyAA1Q8gANUPIADVDyAA1Q
        8gD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////////////8/////P////x////4f///+D////Af///wD///4Af//+A
        D///AA///gAH//4AA///AAH//4AAAP/AAAD/wAAA/+AAAf/wAAHwAAAD4AAAA+AAAAfAAAAPwAAAP4AA
        B/+AAA//AAAf/wAAP/8AAD////////////8=
</value>
  </data>
</root>